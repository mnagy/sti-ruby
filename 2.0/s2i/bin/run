#!/bin/bash

source /usr/share/container-scripts/sti-base/cgroup-util.sh

# function export_memory_limit() {
#   if [ -f /sys/fs/cgroup/memory/memory.limit_in_bytes ]; then
#     export MEMORY_LIMIT_IN_BYTES=$(cat /sys/fs/cgroup/memory/memory.limit_in_bytes)
#     return 0
#   fi
#   return 1
# }
# 
# function export_number_of_cores() {
#   if [ -f /sys/fs/cgroup/cpuset/cpuset.cpus ]; then
#     export NUMBER_OF_CORES=`awk ' \
#       BEGIN { i = 0; FS="-"; RS="[,\n]" } \
#       /^[0-9]+-[0-9]+$/ { i += $2-$1+1 }  \
#       /^[0-9]+$/        { ++i }           \
#       END { print i} \
#       ' /sys/fs/cgroup/cpuset/cpuset.cpus`
#     return 0
#   fi
#   return 1
# }

function is_puma_installed() {
  [ ! -f Gemfile.lock ] && return 1
  grep ' puma ' Gemfile.lock >/dev/null
}

set -e

export RACK_ENV=${RACK_ENV:-"production"}

if is_puma_installed; then
  export MEMORY_LIMIT_IN_BYTES=`cgroups::get_memory_limit`
  export NUMBER_OF_CORES=`cgroups::get_number_of_cores`

  if [[ -z "$MEMORY_LIMIT_IN_BYTES" ]]; then
    echo "Warning: Can't detect memory limit"
  fi
  if [[ -z "$NUMBER_OF_CORES" ]]; then
    echo "Warning: Can't detect number of cores"
  fi

  exec bundle exec "puma --config ../etc/puma.cfg"
else
  echo "You might consider adding 'puma' into your Gemfile."

  if bundle exec rackup -h &>/dev/null; then
    if [ -f Gemfile ]; then
      exec bundle exec "rackup -E ${RAILS_ENV:-$RACK_ENV} -P /tmp/rack.pid --host 0.0.0.0 --port 8080"
    else
      exec rackup -E "${RAILS_ENV:-$RACK_ENV}" -P /tmp/rack.pid --host 0.0.0.0 --port 8080
    fi
  else
    echo "ERROR: Rubygem Rack is not installed in the present image."
    echo "       Add rack to your Gemfile in order to start the web server."
  fi
fi

